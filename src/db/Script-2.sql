CREATE TABLE USERS (
EMAIL VARCHAR2(25) PRIMARY KEY,
FNAME VARCHAR2(25) NOT NULL,
LNAME VARCHAR2(25) NOT NULL,
PASSWORD VARCHAR(25) NOT NULL
);

CREATE TABLE EMPLOYEE(
EMAIL VARCHAR2 (25),
EMP_ID NUMBER(10) PRIMARY KEY,
FOREIGN KEY (EMAIL) REFERENCES USERS(EMAIL)
);

CREATE TABLE MANAGER(
EMAIL VARCHAR2 (25),
MAN_ID NUMBER(10) PRIMARY KEY,
FOREIGN KEY (EMAIL) REFERENCES USERS(EMAIL)
);

CREATE TABLE REQUEST(
REQUEST_ID NUMBER(11) PRIMARY KEY,
EMP_ID NUMBER(10) NOT NULL,
TIME_REQUESTED TIMESTAMP NOT NULL,
AMOUNT FLOAT(24) NOT NULL,
REASON VARCHAR2(100),
RESOLVED VARCHAR2(8) NOT NULL,
FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
);

DROP SEQUENCE EMP_ID_SEQ;
CRiEATE SEQUENCE EMP_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
DROP SEQUENCE MAN_ID_SEQ;
CREATE SEQUENCE MAN_ID_SEQ
	START WITH 1
	INCREMENT BY 1;
DROP SEQUENCE REQ_ID_SEQ;
CREATE SEQUENCE REQ_ID_SEQ
	START WITH 1
	INCREMENT BY 1;

CREATE OR REPLACE TRIGGER EMPID_TRIG
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
	SELECT EMP_ID_SEQ.NEXTVAL INTO :NEW.EMP_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER MANID_TRIG
BEFORE INSERT ON MANAGER
FOR EACH ROW
BEGIN
	SELECT REQ_ID_SEQ.NEXTVAL INTO :NEW.MAN_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER REQID_TRIG
BEFORE INSERT ON REQUEST
FOR EACH ROW
BEGIN
	SELECT MAN_ID_SEQ.NEXTVAL INTO :NEW.REQUEST_ID FROM DUAL;
	SELECT CURRENT_TIMESTAMP INTO :NEW.TIME_REQUESTED FROM DUAL;
END;
	
CREATE OR REPLACE VIEW EMPLOYEES AS
SELECT U.EMAIL, U.FNAME, U.LNAME, U.PASSWORD, E.EMP_ID
FROM USERS U INNER JOIN EMPLOYEE E
ON U.EMAIL = E.EMAIL;

SELECT * FROM EMPLOYEES WHERE EMP_ID = 2;